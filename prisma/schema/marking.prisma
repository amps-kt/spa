enum MarkerType {
    SUPERVISOR
    READER
}

model GradedSubmission {
    id                   String                     @id @default(uuid())
    flagId               String                     @map("flag_id")
    title                String
    deadline             DateTime
    weight               Int
    // ---
    allocationGroupId    String                     @map("allocation_group_id")
    allocationSubGroupId String                     @map("allocation_sub_group_id")
    allocationInstanceId String                     @map("allocation_instance_id")
    // ---
    flag                 Flag                       @relation(fields: [flagId], references: [id])
    allocationInstance   AllocationInstance         @relation(map: "allocation_instance", fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade)
    assessmentComponents AssessmentComponent[]
    markerComments       MarkerSubmissionComments[]

    @@map("flag_submission")
}

model AssessmentComponent {
    id                   String             @id @default(uuid())
    flagId               String             @map("flag_id")
    submissionId         String             @map("submission_id")
    title                String
    description          String
    weight               Int
    layoutIndex          Int                @map("layout_index")
    markerType           MarkerType         @map("marker_type")
    // ---
    allocationGroupId    String             @map("allocation_group_id")
    allocationSubGroupId String             @map("allocation_sub_group_id")
    allocationInstanceId String             @map("allocation_instance_id")
    gradedSubmissionId   String             @map("flag_submission_id")
    // ---
    allocationInstance   AllocationInstance @relation(map: "allocation_instance", fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade)
    gradedSubmission     GradedSubmission   @relation(fields: [gradedSubmissionId], references: [id], onDelete: Cascade)
    scores               ComponentScore[]
    flag                 Flag               @relation(fields: [flagId], references: [id])

    @@map("assessment_component")
}

model ComponentScore {
    id                    String              @id @default(uuid())
    markerId              String              @map("marker_id")
    studentId             String              @map("student_id")
    grade                 Int
    justification         String
    draft                 Boolean
    markerType            MarkerType          @map("marker_type")
    // ---
    assessmentComponentId String              @map("assessment_component_id")
    allocationGroupId     String              @map("allocation_group_id")
    allocationSubGroupId  String              @map("allocation_sub_group_id")
    allocationInstanceId  String              @map("allocation_instance_id")
    // ---
    allocationInstance    AllocationInstance  @relation(map: "allocation_instance", fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade)
    component             AssessmentComponent @relation(fields: [assessmentComponentId], references: [id], onDelete: Cascade)

    @@map("component_score")
}

model MarkerSubmissionComments {
    id                   String             @id @default(uuid())
    summary              String
    recommendedForPrize  Boolean            @default(false) @map("recommended_for_prize")
    // ---
    markerId             String             @map("marker_id")
    studentId            String             @map("student_id")
    flagId               String             @map("flag_id")
    submissionId         String             @map("submission_id")
    allocationGroupId    String             @map("allocation_group_id")
    allocationSubGroupId String             @map("allocation_sub_group_id")
    allocationInstanceId String             @map("allocation_instance_id")
    // ---
    gradedSubmission     GradedSubmission   @relation(fields: [submissionId], references: [id], onDelete: Cascade)
    allocationInstance   AllocationInstance @relation(map: "allocation_instance", fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade)

    @@unique(name: "studentMarkerSubmission", [markerId, studentId, submissionId])
    @@map("marker_submission_comments")
}

model FinalGrade {
    id                       String                   @id @default(uuid())
    studentId                String                   @map("student_id")
    grade                    Int
    // ---
    allocationGroupId        String                   @map("allocation_group_id")
    allocationSubGroupId     String                   @map("allocation_sub_group_id")
    allocationInstanceId     String                   @map("allocation_instance_id")
    // ---
    allocationInstance       AllocationInstance       @relation(map: "allocation_instance", fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade)
    studentProjectAllocation StudentProjectAllocation @relation(fields: [studentId, allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [userId, allocationGroupId, allocationSubGroupId, allocationInstanceId], onDelete: Cascade)

    @@unique([studentId, allocationGroupId, allocationSubGroupId, allocationInstanceId])
    @@map("final_grade")
}
