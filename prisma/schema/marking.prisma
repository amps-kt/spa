enum MarkerType {
  SUPERVISOR
  READER
}

model UnitOfAssessment {
  id                          String                       @id @default(uuid())
  flagId                      String                       @map("flag_id")
  title                       String
  open                        Boolean                      @default(false)
  studentSubmissionDeadline   DateTime                     @map("student_submission_deadline")
  markerSubmissionDeadline    DateTime                     @map("marker_submission_deadline")
  weight                      Int
  allowedMarkerTypes          MarkerType[]
  // ---
  allocationGroupId           String                       @map("allocation_group_id")
  allocationSubGroupId        String                       @map("allocation_sub_group_id")
  allocationInstanceId        String                       @map("allocation_instance_id")
  // ---
  flag                        Flag                         @relation(fields: [flagId], references: [id], onDelete: Cascade)
  allocationInstance          AllocationInstance           @relation(fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade, map: "allocation_instance")
  assessmentCriteria          AssessmentCriterion[]
  markerSubmissions           MarkingSubmission[]
  finalUnitOfAssessmentGrades FinalUnitOfAssessmentGrade[]

  @@map("unit_of_assessment")
}

model AssessmentCriterion {
  id                 String           @id @default(uuid())
  unitOfAssessmentId String           @map("unit_of_assessment_id")
  title              String
  description        String
  weight             Int
  layoutIndex        Int              @map("layout_index")
  // ---
  unitOfAssessment   UnitOfAssessment @relation(fields: [unitOfAssessmentId], references: [id], onDelete: Cascade)
  scores             CriterionScore[]

@@unique([title, unitOfAssessmentId])
  @@map("assessment_criterion")
}

model MarkingSubmission {
  summary             String
  grade               Int
  recommendedForPrize Boolean          @default(false) @map("recommended_for_prize")
  draft               Boolean
  markerId            String           @map("marker_id")
  studentId           String           @map("student_id")
  unitOfAssessmentId  String           @map("unit_of_assessment_id")
  // ---
  unitOfAssessment    UnitOfAssessment @relation(fields: [unitOfAssessmentId], references: [id], onDelete: Cascade)
  criterionScores     CriterionScore[]

  @@id([markerId, studentId, unitOfAssessmentId], name: "studentMarkerSubmission")
  @@map("assessment_marking_submission")
}

model CriterionScore {
  markerId              String              @map("marker_id")
  studentId             String              @map("student_id")
  unitOfAssessmentId    String              @map("unit_of_assessment_id")
  grade                 Int
  justification         String
  // ---
  assessmentCriterionId String              @map("assessment_component_id")
  // ---
  criterion             AssessmentCriterion @relation(fields: [assessmentCriterionId], references: [id], onDelete: Cascade)
  submission            MarkingSubmission   @relation(fields: [markerId, studentId, unitOfAssessmentId], references: [markerId, studentId, unitOfAssessmentId], onDelete: Cascade)

  @@id([markerId, studentId, assessmentCriterionId], name: "markingCriterionSubmission")
  @@map("criterion_score")
}

model FinalUnitOfAssessmentGrade {
  unitOfAssessmentId String           @map("unit_of_assessment_id")
  unitOfAssessment   UnitOfAssessment @relation(fields: [unitOfAssessmentId], references: [id], onDelete: Cascade)
  studentId          String           @map("student_id")
  grade              Int
  comment            String

  @@id([studentId, unitOfAssessmentId], name: "studentAssessmentGrade")
  @@map("final_unit_of_assessment_grade")
}

model FinalGrade {
  id                       String                   @id @default(uuid())
  studentId                String                   @map("student_id")
  grade                    Int
  // ---
  allocationGroupId        String                   @map("allocation_group_id")
  allocationSubGroupId     String                   @map("allocation_sub_group_id")
  allocationInstanceId     String                   @map("allocation_instance_id")
  // ---
  allocationInstance       AllocationInstance       @relation(fields: [allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [allocationGroupId, allocationSubGroupId, id], onDelete: Cascade, map: "allocation_instance")
  studentProjectAllocation StudentProjectAllocation @relation(fields: [studentId, allocationGroupId, allocationSubGroupId, allocationInstanceId], references: [userId, allocationGroupId, allocationSubGroupId, allocationInstanceId], onDelete: Cascade)

  @@unique([studentId, allocationGroupId, allocationSubGroupId, allocationInstanceId])
  @@map("final_grade")
}
